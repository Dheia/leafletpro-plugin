<label class="input-group">
    <span>
        {{ 'initbiz.leafletpro::lang.components.pick_localization.longitude'|trans }}
    </span>
    <input class="input-field"
           id="{{  __SELF__ ~ '-longitude'}}"
           name="longitude"
    />
</label>
<label class="input-group">
    <span>
        {{ 'initbiz.leafletpro::lang.components.pick_localization.latitude'|trans }}
    </span>
    <input class="input-field"
           id="{{  __SELF__ ~ '-latitude' }}"
           name="latitude"
    />
</label>
<div class="lg:col-span-2 flex justify-end">
    <button type="button" class="btn btn-secondary find-localization-button">{{ 'initbiz.leafletpro::lang.components.pick_localization.find_localization'|trans }}</button>
</div>

<div class="rounded-2xl border border-primary drop-shadow-tertiary-lg lg:col-span-2">
    {% set mapVar = __SELF__ ~ 'Map' %}
    <div id='{{ __SELF__ ~ "-container" }}' class="leaflet-map"></div>
</div>
{% put scripts %}
<script>
    var leafletContainer = '{{ __SELF__ ~ "-container" }}';

    if ($('#{{__SELF__}}-latitude').val() == null || $('#{{__SELF__}}-latitude').val() == '') {
        var {{ mapVar }} = L.map(leafletContainer).setView([ 50.061546997919635, 19.937192201614383], 15);
    } else {
        var {{ mapVar }} = L.map(leafletContainer).setView([$('#{{__SELF__}}-latitude').val(), $('#{{__SELF__}}-longitude').val()], 16);
    };

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '{% partial __SELF__ ~ "::attribution" %}',
        maxZoom: 18
    }).addTo({{ mapVar }});

    {{ mapVar }}.once('focus', function () {
        {{ mapVar }}.scrollWheelZoom.enable();
    });


    let {{ mapVar ~ "LayerGroup" }} = L.layerGroup();
    function {{ mapVar ~ "markersMap" }} (coords) {
        if ({{mapVar}}.hasLayer({{ mapVar ~ "LayerGroup" }})) {
            {{ mapVar ~ "LayerGroup" }}.clearLayers();
        }

        var marker = L.marker(coords);
        {{ mapVar ~ "LayerGroup" }}.addLayer(marker);
        {{ mapVar }}.addLayer({{ mapVar ~ "LayerGroup" }});
    }

    {{ mapVar ~ "markersMap" }}([$('#{{__SELF__}}-latitude').val(), $('#{{__SELF__}}-longitude').val()]);

    $('.find-localization-button').on('click', function() {
        let lng = $('#{{__SELF__}}-longitude').val();
        let lat = $('#{{__SELF__}}-latitude').val();
        {{ mapVar ~ "markersMap" }}([lat, lng]);
    });

    {{ mapVar }}.on('click', function(e) {
        $('#{{__SELF__}}-longitude').val(e.latlng.lng);
        $('#{{__SELF__}}-latitude').val(e.latlng.lat);
        {{ mapVar ~ "markersMap" }}([e.latlng.lat, e.latlng.lng]);
    });
</script>
{% endput %}

{% put styles %}
<style>
    .leaflet-map {
        min-height: 400px;
    }
    .leaflet-grab {
        cursor: crosshair;
    }
    .leaflet-dragging .leaflet-grab{
        cursor: move;
    }
</style>
{% endput %}
